<?xml version="1.0" encoding="utf-8"?>
<ManagementPackFragment SchemaVersion="2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <TypeDefinitions>
    <EntityTypes>
      <ClassTypes>
        <ClassType ID="Docker.Unix.Container" Base="Docker.Unix.Object" Accessibility="Public" Abstract="false" Hosted="true" Singleton="false">
          <Property ID="HostName" Key="false" Type="string" />
          <Property ID="CreatedTime" Key="false" Type="datetime" />
          <Property ID="Image" Key="false" Type="string" />
        </ClassType>
        <ClassType ID="Docker.Unix.Object" Base="Unix!Microsoft.Unix.ApplicationComponent" Accessibility="Public" Abstract="true" Hosted="true" Singleton="false">
          <Property ID="Id" Key="true" Type="string" />
          <Property ID="Name" Key="false" Type="string" />
        </ClassType>        
      </ClassTypes>
      <RelationshipTypes>
        <RelationshipType ID="Docker.Unix.Daemon.Hosts.Object" Base="System!System.Hosting" Abstract="false" Accessibility="Public">
          <Source ID="Daemon" Type="Docker.Unix.Daemon" />
          <Target ID="Object" Type="Docker.Unix.Object" />
        </RelationshipType>        
        <RelationshipType ID="Docker.Unix.Container.References.Image" Base="System!System.Reference" Abstract="false" Accessibility="Public">
          <Source ID="Container" Type="Docker.Unix.Container" />
          <Target ID="Image" Type="Docker.Unix.Image" />
        </RelationshipType>
      </RelationshipTypes>
    </EntityTypes>
    <ModuleTypes>
      <DataSourceModuleType ID="Docker.Unix.WSMan.TimedEnumerate.DiscoveryData" Accessibility="Public">
        <Configuration>
          <IncludeSchemaTypes>
            <SchemaType>System!System.Discovery.MapperSchema</SchemaType>
            <SchemaType>System!System.ExpressionEvaluatorSchema</SchemaType>
          </IncludeSchemaTypes>
          <xsd:element name="TargetSystem" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="Uri" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="Filter" type="xsd:string" minOccurs="0" maxOccurs="1" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="SplitItems" type="xsd:boolean" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="Interval" type="xsd:unsignedInt" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="SyncTime" type="xsd:string" minOccurs="0" maxOccurs="1" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="ClassId" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="ClassInstanceSettings" type="SettingsType" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="RelationshipId" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="RelationshipInstanceSettings" minOccurs="0" maxOccurs="1" type="SettingsType" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="SourceTypeId" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="SourceRoleSettings" minOccurs="0" maxOccurs="1" type="SettingsType" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="TargetTypeId" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="TargetRoleSettings" minOccurs="0" maxOccurs="1" type="SettingsType" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="OutputErrorIfAny" type="xsd:boolean" minOccurs="0" maxOccurs="1" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="0" name="Expression" type="ExpressionType" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
        </Configuration>
        <OverrideableParameters>
          <OverrideableParameter ID="Interval" ParameterType="int" Selector="$Config/Interval$" />
          <OverrideableParameter ID="SyncTime" ParameterType="string" Selector="$Config/SyncTime$" />
          <OverrideableParameter ID="OutputErrorIfAny" ParameterType="string" Selector="$Config/OutputErrorIfAny$" />
        </OverrideableParameters>
        <ModuleImplementation>
          <Composite>
            <MemberModules>
              <DataSource ID="Scheduler" TypeID="System!System.Discovery.Scheduler">
                <!-- Params to the scheduler part -->
                <Scheduler>
                  <SimpleReccuringSchedule>
                    <Interval Unit="Seconds">$Config/Interval$</Interval>
                    <SyncTime>$Config/SyncTime$</SyncTime>
                  </SimpleReccuringSchedule>
                  <ExcludeDates />
                </Scheduler>
              </DataSource>
              <!-- WSMan enumeration -->
              <ProbeAction ID="Enum" TypeID="Docker.Unix.WSMan.Enumerate.ProbeAction">
                <TargetSystem>$Config/TargetSystem$</TargetSystem>
                <Uri>$Config/Uri$</Uri>
                <Filter>$Config/Filter$</Filter>
                <OutputErrorIfAny>$Config/OutputErrorIfAny$</OutputErrorIfAny>
                <SplitItems>$Config/SplitItems$</SplitItems>
              </ProbeAction>
              <ConditionDetection ID="Filter" TypeID="System!System.ExpressionFilter">
                <Expression>
                  <And>
                    <Expression>
                      <Not>
                        <Expression>
                          <Exists>
                            <ValueExpression>
                              <XPathQuery Type="String">WsManData/ErrorCode</XPathQuery>
                            </ValueExpression>
                          </Exists>
                        </Expression>
                      </Not>
                    </Expression>
                    <Expression>$Config/Expression$</Expression>
                  </And>
                </Expression>
              </ConditionDetection>
              <ConditionDetection ID="Mapper" TypeID="System!System.Discovery.ClassAndRelationshipSnapshotDataMapper">
                <ClassId>$Config/ClassId$</ClassId>
                <ClassInstanceSettings>$Config/ClassInstanceSettings$</ClassInstanceSettings>
                <RelationshipId>$Config/RelationshipId$</RelationshipId>
                <RelationshipInstanceSettings>$Config/RelationshipInstanceSettings$</RelationshipInstanceSettings>
                <SourceTypeId>$Config/SourceTypeId$</SourceTypeId>
                <SourceRoleSettings>$Config/SourceRoleSettings$</SourceRoleSettings>
                <TargetTypeId>$Config/TargetTypeId$</TargetTypeId>
                <TargetRoleSettings>$Config/TargetRoleSettings$</TargetRoleSettings>
              </ConditionDetection>
            </MemberModules>
            <Composition>
              <Node ID="Mapper">
                <Node ID="Filter">
                  <Node ID="Enum">
                    <Node ID="Scheduler" />
                  </Node>
                </Node>
              </Node>
            </Composition>
          </Composite>
        </ModuleImplementation>
        <OutputType>System!System.Discovery.Data</OutputType>
      </DataSourceModuleType>
      <ProbeActionModuleType ID="Docker.Unix.WSMan.Enumerate.VarPriv.ProbeAction" Accessibility="Internal" Batching="true">
        <Configuration>
          <xsd:element name="TargetSystem" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="UserName" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="Password" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="Uri" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="Filter" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="OutputErrorIfAny" type="xsd:boolean" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="SplitItems" type="xsd:boolean" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="TimeOutInMS" type="xsd:int" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
        </Configuration>
        <OverrideableParameters />
        <ModuleImplementation>
          <Composite>
            <MemberModules>
              <ProbeAction ID="Payload" TypeID="Docker.Unix.WSMan.Native.ProbeAction">
                <UserName>$Config/UserName$</UserName>
                <Password>$Config/Password$</Password>
              </ProbeAction>
              <ProbeAction ID="Enum" TypeID="WSM!Microsoft.SystemCenter.WSManagement.Enumerator">
                <Enumerate>
                  <Protocol>https</Protocol>
                  <TargetSystem>$Config/TargetSystem$</TargetSystem>
                  <Port>1270</Port>
                  <Authentication>basic</Authentication>
                  <UserName>$Data/WSManPayloadData/UserName$</UserName>
                  <Password>$Config/Password$</Password>
                  <SkipCACheck>false</SkipCACheck>
                  <SkipCNCheck>false</SkipCNCheck>
                  <OutputErrorIfAny>$Config/OutputErrorIfAny$</OutputErrorIfAny>
                  <UTF>utf-8</UTF>
                  <Uri>$Config/Uri$</Uri>
                  <Filter>$Config/Filter$</Filter>
                  <TimeOutInMS>$Config/TimeOutInMS$</TimeOutInMS>
                  <SplitItems>$Config/SplitItems$</SplitItems>
                  <EventPolicy>
                    <EventOnConnectionErrors>false</EventOnConnectionErrors>
                  </EventPolicy>
                </Enumerate>
              </ProbeAction>
            </MemberModules>
            <Composition>
              <Node ID="Enum">
                <Node ID="Payload" />
              </Node>
            </Composition>
          </Composite>
        </ModuleImplementation>
        <OutputType>WSM!Microsoft.SystemCenter.WSManagement.WSManData</OutputType>
        <InputType>System!System.BaseData</InputType>
      </ProbeActionModuleType>
      <ProbeActionModuleType ID="Docker.Unix.WSMan.Native.ProbeAction" Accessibility="Internal" Batching="true">
        <Configuration>
          <xsd:element name="UserName" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="Password" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="InvokeAction" type="xsd:string" minOccurs="0" maxOccurs="1" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="Input" type="xsd:string" minOccurs="0" maxOccurs="1" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
        </Configuration>
        <ModuleImplementation>
          <Native>
            <ClassID>BC26F256-D513-4DDF-8C27-98ED18DBCCD8</ClassID>
          </Native>
        </ModuleImplementation>
        <OutputType>Unix!Microsoft.SCX.WSManPayloadData</OutputType>
        <TriggerOnly>true</TriggerOnly>
      </ProbeActionModuleType>
      <ProbeActionModuleType ID="Docker.Unix.WSMan.Enumerate.ProbeAction" Accessibility="Internal" Batching="true">
        <Configuration>
          <xsd:element name="TargetSystem" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="Uri" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="Filter" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="OutputErrorIfAny" type="xsd:boolean" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="SplitItems" type="xsd:boolean" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
        </Configuration>
        <OverrideableParameters />
        <ModuleImplementation>
          <Composite>
            <MemberModules>
              <ProbeAction ID="Enum" TypeID="Docker.Unix.WSMan.Enumerate.VarPriv.ProbeAction">
                <TargetSystem>$Config/TargetSystem$</TargetSystem>
                <UserName>$RunAs[Name="Unix!Microsoft.Unix.ActionAccount"]/UserName$</UserName>
                <Password>$RunAs[Name="Unix!Microsoft.Unix.ActionAccount"]/Password$</Password>
                <Uri>$Config/Uri$</Uri>
                <Filter>$Config/Filter$</Filter>
                <OutputErrorIfAny>$Config/OutputErrorIfAny$</OutputErrorIfAny>
                <SplitItems>$Config/SplitItems$</SplitItems>
                <TimeOutInMS>120000</TimeOutInMS>
              </ProbeAction>
            </MemberModules>
            <Composition>
              <Node ID="Enum" />
            </Composition>
          </Composite>
        </ModuleImplementation>
        <OutputType>WSM!Microsoft.SystemCenter.WSManagement.WSManData</OutputType>
        <InputType>System!System.BaseData</InputType>
      </ProbeActionModuleType>
    </ModuleTypes>
  </TypeDefinitions>
  <Categories>
    <Category ID="Docker.Container.Diagram" Target="Docker.Container.80x80Image" Value="System!System.Internal.ManagementPack.Images.DiagramIcon" />
    <Category ID="Docker.Container.Icon" Target="Docker.Container.16x16Image" Value="System!System.Internal.ManagementPack.Images.u16x16Icon" />
  </Categories>
  <Monitoring>
    <Discoveries>
      <Discovery ID="Docker.Unix.Container.Discovery" Target="Docker.Unix.Daemon" Enabled="true" ConfirmDelivery="false" Remotable="true" Priority="Normal">
        <Category>Discovery</Category>
        <DiscoveryTypes>
          <DiscoveryClass TypeID="Docker.Unix.Container">
            <Property TypeID="Docker.Unix.Container" PropertyID="CreatedTime" />
            <Property TypeID="Docker.Unix.Container" PropertyID="Image" />
            <Property TypeID="Docker.Unix.Container" PropertyID="HostName" />
            <Property TypeID="Docker.Unix.Object" PropertyID="Id" />
            <Property TypeID="Docker.Unix.Object" PropertyID="Name" />
            <Property TypeID="System!System.Entity" PropertyID="DisplayName" />
          </DiscoveryClass>
          <DiscoveryClass TypeID="Docker.Unix.Image">
            <Property TypeID="Docker.Unix.Object" PropertyID="Id" />
          </DiscoveryClass>
        </DiscoveryTypes>
        <DataSource ID="DS" TypeID="Docker.Unix.WSMan.TimedEnumerate.DiscoveryData">
          <TargetSystem>$Target/Host/Property[Type="Unix!Microsoft.Unix.Computer"]/NetworkName$</TargetSystem>
          <Uri>http://schemas.microsoft.com/wbem/wscim/1/cim-schema/2/Container_ContainerInventory?__cimnamespace=root/cimv2</Uri>
          <SplitItems>true</SplitItems>
          <Interval>14400</Interval>
          <ClassId>$MPElement[Name="Docker.Unix.Container"]$</ClassId>
          <ClassInstanceSettings>
            <Settings>
              <Setting>
                <Name>$MPElement[Name="Unix!Microsoft.Unix.Computer"]/PrincipalName$</Name>
                <Value>$Target/Host/Property[Type="Unix!Microsoft.Unix.Computer"]/PrincipalName$</Value>
              </Setting>
              <Setting>
                <Name>$MPElement[Name="System!System.Entity"]/DisplayName$</Name>
                <Value>$Data///DataItem/WsManData/*[local-name(.)='Container_ContainerInventory']/*[local-name(.)='ElementName']$</Value>
              </Setting>
              <Setting>
                <Name>$MPElement[Name="Docker.Unix.Object"]/Id$</Name>
                <Value>$Data///DataItem/WsManData/*[local-name(.)='Container_ContainerInventory']/*[local-name(.)='InstanceID']$</Value>
              </Setting>
              <Setting>
                <Name>$MPElement[Name="Docker.Unix.Object"]/Name$</Name>
                <Value>$Data///DataItem/WsManData/*[local-name(.)='Container_ContainerInventory']/*[local-name(.)='ElementName']$</Value>
              </Setting>
              <Setting>
                <Name>$MPElement[Name="Docker.Unix.Container"]/HostName$</Name>
                <Value>$Data///DataItem/WsManData/*[local-name(.)='Container_ContainerInventory']/*[local-name(.)='ContainerHostname']$</Value>
              </Setting>
              <Setting>
                <Name>$MPElement[Name="Docker.Unix.Container"]/CreatedTime$</Name>
                <Value>$Data///DataItem/WsManData/*[local-name(.)='Container_ContainerInventory']/*[local-name(.)='CreatedTime']$</Value>
              </Setting>
              <Setting>
                <Name>$MPElement[Name="Docker.Unix.Container"]/Image$</Name>
                <Value>$Data///DataItem/WsManData/*[local-name(.)='Container_ContainerInventory']/*[local-name(.)='Image']$</Value>
              </Setting>
            </Settings>
          </ClassInstanceSettings>
          <RelationshipId>$MPElement[Name="Docker.Unix.Container.References.Image"]$</RelationshipId>
          <SourceTypeId>$MPElement[Name="Docker.Unix.Container"]$</SourceTypeId>
          <SourceRoleSettings>
            <Settings>
              <Setting>
                <Name>$MPElement[Name="Unix!Microsoft.Unix.Computer"]/PrincipalName$</Name>
                <Value>$Target/Host/Property[Type="Unix!Microsoft.Unix.Computer"]/PrincipalName$</Value>
              </Setting>
              <Setting>
                <Name>$MPElement[Name="Docker.Unix.Object"]/Id$</Name>
                <Value>$Data///DataItem/WsManData/*[local-name(.)='Container_ContainerInventory']/*[local-name(.)='InstanceID']$</Value>
              </Setting>
            </Settings>
          </SourceRoleSettings>
          <TargetTypeId>$MPElement[Name="Docker.Unix.Image"]$</TargetTypeId>
          <TargetRoleSettings>
            <Settings>
              <Setting>
                <Name>$MPElement[Name="Unix!Microsoft.Unix.Computer"]/PrincipalName$</Name>
                <Value>$Target/Host/Property[Type="Unix!Microsoft.Unix.Computer"]/PrincipalName$</Value>
              </Setting>
              <Setting>
                <Name>$MPElement[Name="Docker.Unix.Object"]/Id$</Name>
                <Value>$Data///DataItem/WsManData/*[local-name(.)='Container_ContainerInventory']/*[local-name(.)='ImageId']$</Value>
              </Setting>
            </Settings>
          </TargetRoleSettings>
          <OutputErrorIfAny>false</OutputErrorIfAny>
        </DataSource>
      </Discovery>
    </Discoveries>
  </Monitoring>
  <Presentation>
    <ImageReferences>
      <ImageReference ElementID="Docker.Unix.Container" ImageID="Docker.Container.16x16Image" />
      <ImageReference ElementID="Docker.Unix.Container" ImageID="Docker.Container.80x80Image" />
    </ImageReferences>
  </Presentation>
  <LanguagePacks>
    <LanguagePack ID="ENU" IsDefault="true">
      <DisplayStrings>
        <DisplayString ElementID="Docker.Unix.Container.Discovery">
          <Name>Discover Docker Container</Name>
          <Description></Description>
        </DisplayString>
      </DisplayStrings>
    </LanguagePack>
  </LanguagePacks>
</ManagementPackFragment>